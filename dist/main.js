!function(){"use strict";function e(e){e.classList.add("forms_is-open"),document.addEventListener("keydown",n),document.addEventListener("mousedown",r)}var t=function(e){e.classList.remove("forms_is-open"),document.removeEventListener("keydown",n),document.removeEventListener("mousedown",r)};function n(e){var n=document.querySelector(".forms_is-open");"Escape"===e.key&&t(n)}function r(e){var n=document.querySelector(".forms_is-open");(e.target.classList.contains("forms")||e.target.classList.contains("forms__button-close"))&&t(n)}function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=document.querySelector(".forms__image"),a=document.querySelector(".forms__image-title"),s=document.querySelector("#image-show"),l=function(){function t(e,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e.name,this._link=e.link,this._cardSelector=n}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}},{key:"generateCard",value:function(){this._element=this._getTemplate(),this._setEventListeners(),this._element.querySelector(".card__title").textContent=this._name;var e=this._element.querySelector(".card__img");return e.alt=this._name,e.src=this._link,this._element}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".card__button").addEventListener("click",(function(t){e._handleLikeButton(t)})),this._element.querySelector(".card__img").addEventListener("click",(function(){e._handleShowImage()})),this._element.querySelector(".card__delete").addEventListener("click",(function(t){e._handleDeleteCard(t)}))}},{key:"_handleShowImage",value:function(){i.src=this._link,i.alt=this._name,a.textContent=this._name,e(s)}},{key:"_handleLikeButton",value:function(e){e.target.classList.toggle("card__button_active")}},{key:"_handleDeleteCard",value:function(){this._element.remove(),this._element=null}}])&&o(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function u(e){return function(e){if(Array.isArray(e))return c(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return c(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?c(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function c(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var m=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formElement=n}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector(".".concat(e.id,"-input-error"));e.classList.add(this._inputErrorClass),n.textContent=t,n.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-input-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}},{key:"_hasInvalidInput",value:function(){return u(this._inputList).some((function(e){return!e.validity.valid}))}},{key:"_toggleInputError",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}},{key:"_setEventListeners",value:function(){var e=this;this._inputList=u(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._toggleInputError(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}},{key:"resetValidation",value:function(){var e=this;this._inputList.forEach((function(t){e._hideInputError(t)})),this._toggleButtonState()}}])&&d(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var f=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&_(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),h={formSelector:".forms",inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__error-text_active"},v=document.querySelector(".cards__container"),y=document.querySelector("#edit-profile"),p=document.querySelector("#img-add"),b=document.querySelector("#add-form"),S=(document.querySelector("#edit-form"),document.querySelector(".profile__button-name-edit")),E=document.querySelector(".profile__button-add"),g=y.querySelector(".forms__button-close"),k=p.querySelector(".forms__button-close"),L=document.querySelector(".profile__name"),w=document.querySelector(".profile__about"),q=y.querySelector("#username"),C=y.querySelector("#about"),I=p.querySelector("#title"),B=p.querySelector("#image-link"),j=new m(h,y),x=new m(h,p);j.enableValidation(),x.enableValidation(),y.addEventListener("submit",(function(e){e.preventDefault(),L.textContent=q.value,w.textContent=C.value,t(y)})),S.addEventListener("click",(function(){q.value=L.textContent,C.value=w.textContent,j.resetValidation(),e(y)})),p.addEventListener("submit",(function(e){e.preventDefault(),function(e,t){var n=new l(e,"#card").generateCard();t.prepend(n)}({name:I.value,link:B.value},v),t(p)})),E.addEventListener("click",(function(){b.reset(),x.resetValidation(),e(p)})),g.addEventListener("click",(function(){t(y)})),k.addEventListener("click",(function(){t(p)})),new f({items:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:function(e){new l(e,"#card").generateCard()}},".cards__container"),cardsList.renderItems()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,